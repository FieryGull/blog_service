name: "Test and linting services"

on: [push]

env:
  POSTGRES_DB: blog_service
  POSTGRES_USER: blog_user
  POSTGRES_PASSWORD: blog_password
  DB_HOST: 0.0.0.0
  DB_PORT: 5432

  AUTH_SERVICE_PORT: 8000
  POST_SERVICE_PORT: 8001

  RUST_LOG: debug

  JWT_SECRET: my_ultra_secure_secret
  JWT_EXPIRED_IN: 60m
  JWT_MAXAGE: 60

jobs:
  auth_service:
    name: "Testing and Linting auth_service"
    runs-on: "ubuntu-latest"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_DB: $POSTGRES_DB
        ports:
          - 5432:5432
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3

      - uses: "actions-rs/toolchain@v1"
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: "Copy common_lib"
        run: "cp -r ./common_lib ./auth_service/src/common_lib"

      - name: "Migrate database"
        run: docker exec -i $(docker ps -aqf "name=postgres") bash < ./postgres/init-database.sh

      - name: "Run cargo clippy"
        run: "cargo clippy -- -D warnings"
        working-directory: ./auth_service

      - name: "Run cargo test"
        run: "cargo test"
        working-directory: ./auth_service

  post_service:
    name: "Testing and Linting post_service"
    runs-on: "ubuntu-latest"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_DB: $POSTGRES_DB
        ports:
          - 5432:5432
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3

      - uses: "actions-rs/toolchain@v1"
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: "Copy common_lib"
        run: "cp -r ./common_lib ./post_service/src/common_lib"

      - name: "Migrate database"
        run: docker exec -i $(docker ps -aqf "name=postgres") bash < ./postgres/init-database.sh

      - name: "Run cargo clippy"
        run: "cargo clippy -- -D warnings"
        working-directory: ./post_service

      - name: "Run cargo test"
        run: "cargo test"
        working-directory: ./post_service
